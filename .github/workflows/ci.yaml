name: Release


on:
  release:
    types:
      - created
  # Create unstable release on push to development
  push:
    branches:
    - development

# defaults:
#   run:
#     shell: bash
# permissions: read-all

# permissions:
#   contents: read




jobs:

#   # Create a release on push to development
  release-preperation:
    if: github.repository == 'eliyahu77/mlrun-setup'
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Delete previous unstable release
      if: github.event_name == 'push'
      uses: dev-drprasad/delete-tag-and-release@v0.1.3
      with:
        delete_release: true # default: false
        tag_name: unstable # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Create new unstable release
      id: create_unstable_release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: unstable
        release_name: unstable
        body: |
          Latest unstable release
          - Git sha ${{ github.sha }}
          - Updated at ${{ github.event.head_commit.timestamp}}
        draft: false
        prerelease: false

  build:
    if: github.repository == 'eliyahu77/mlrun-setup' 
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release    
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64 ]
        os: [ linux ]

    steps:

      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Dump github ref
        run: echo "$GITHUB_REF"
        
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract ref info
        run: |
          echo "REF_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" | tee -a $GITHUB_ENV
          echo "REF_TAG=$(echo ${GITHUB_REF#refs/tags/} | tr / -)" | tee -a $GITHUB_ENV

      - name: Set MLRUNSETUP_TAG to release tag
        if: github.event_name == 'release'
        run: |
          echo "MLRUNSETUP_TAG=${{ env.REF_TAG }}" >> $GITHUB_ENV     

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - run: pip install -r requirements.txt 
      - run: pyinstaller -F mlsetup.py


      - name: get datat
        run: cp  dist/mlsetup  mlsetup-${{matrix.os}}-${{ matrix.arch }}
    
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: mlsetup-${{matrix.os}}-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: GitHub Tag Name example
#         if:  env.REF_BRANCH == 'development'
#        run: |
#          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
#          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      - name: Checkout code
        if:  env.REF_BRANCH == 'development'
        uses: actions/checkout@v3
        ref: 'refs/tags/unstable'

      - name: Release Unstable
        uses: softprops/action-gh-release@v1
        if:  env.REF_BRANCH == 'development'
        with:
          files: mlsetup-${{matrix.os}}-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}