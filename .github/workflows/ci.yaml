name: Release


on:
  release:
    types:
      - created
  # Create unstable release on push to development
  push:
    branches:
    - development

# defaults:
#   run:
#     shell: bash

permissions:
  contents: read




jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64 ]
        os: [ linux, darwin ]      

    steps:

      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Dump github ref
        run: echo "$GITHUB_REF"
        
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract ref info
        run: |
          echo "REF_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" | tee -a $GITHUB_ENV
          echo "REF_TAG=$(echo ${GITHUB_REF#refs/tags/} | tr / -)" | tee -a $GITHUB_ENV

      - name: Set MLRUNSETUP_TAG to release tag
        if: github.event_name == 'release'
        run: |
          echo "MLRUNSETUP_TAG=${{ env.REF_TAG }}" >> $GITHUB_ENV


       

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - run: pip install -r requirements.txt 
      - run: pyinstaller -F mlsetup.py
      - name: get datat
        run: ls -ltrh 
      - name: get datat
        run: cp  dist/mlsetup  mlsetup-${{ matrix.arch }}
      
#       - name: Upload binaries (${{ matrix.os }}:${{ matrix.arch }})
#         uses: AButler/upload-release-assets@v2.0
#         if: github.event_name == 'release'
#         with:
#           files: mlsetup-${{ matrix.arch }}
#           repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: mlsetup-${{ matrix.arch }}

        
#     - name: "Upload  binarys"
# #       if: inputs.upload-repo == false
#       uses: actions/upload-artifact@v3
#       with:
#         name: mlsetup-${{ matrix.arch }}
#         path: .   
  
